#####################################################################
# ENV
#####################################################################

export EDITOR="nvim"
export FZF_DEFAULT_COMMAND='rg --files --follow --hidden --glob "!.git/"'

# Add tools to the PATH
if [ -d "$HOME/dotfiles/tools" ]; then
    for d in "$Home/dotfiles/tools/*"; do
        if [ -d "$d" ]; then
            PATH="${d%%/}:$PATH"
        fi
    done
    PATH="$HOME/dotfiles/tools:$PATH"
fi

# Locale settings. Force de_DE.UTF-8 instead of smart detection for now
export LC_ALL=de_DE.UTF-8
export LANG=de_DE.UTF-8

# Local binaries (e.g. stack)
export PATH="$HOME/.local/bin:$PATH"
export JAVA_HOME="/usr/lib/jvm/java-8-openjdk"
export IDEA_JDK="/usr/lib/jvm/java-8-openjdk"

#####################################################################
# History
#####################################################################

# Long history
export HISTSIZE=100000
export SAVEHIST=$HISTSIZE

#####################################################################
# Functions
#####################################################################
function npm-do { (PATH=$(npm bin):$PATH; eval $@;) }

function npm-version {
    package=$1
    quiet=false

    if [[ $1 == '-q' ]]; then
        package=$2
        quiet=true
    fi

    version=$(cat "node_modules/$package/package.json" \
        | grep '"version":' \
        | awk '{ print $2 }' \
        | sed 's/[",]//g')

    if [[ $quiet == true ]]; then
        echo "$version"
    else
        echo "$package: $version"
    fi
}

#####################################################################
# ENV
#####################################################################
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"

#####################################################################
# SECRETS
#####################################################################
if [ -e "$CONFIG_DIR/.secrets" ]; then
    source "$CONFIG_DIR/.secrets"
fi
